@import "tailwindcss";

@layer base {
  :root {
    --background: hsl(0 0% 100%);
    --foreground: hsl(222.2 84% 4.9%);
    --card: hsl(0 0% 100%);
    --card-foreground: hsl(222.2 84% 4.9%);
    --popover: hsl(0 0% 100%);
    --popover-foreground: hsl(222.2 84% 4.9%);
    --primary: hsl(222.2 47.4% 11.2%);
    --primary-foreground: hsl(210 40% 98%);
    --secondary: hsl(210 40% 96.1%);
    --secondary-foreground: hsl(222.2 47.4% 11.2%);
    --muted: hsl(210 40% 96.1%);
    --muted-foreground: hsl(215.4 16.3% 46.9%);
    --accent: hsl(210 40% 96.1%);
    --accent-foreground: hsl(222.2 47.4% 11.2%);
    --destructive: hsl(0 84.2% 60.2%);
    --destructive-foreground: hsl(210 40% 98%);
    --border: hsl(214.3 31.8% 91.4%);
    --input: hsl(214.3 31.8% 91.4%);
    --ring: hsl(222.2 84% 4.9%);
    --radius: 0.5rem;
  }
 
  .dark {
    --background: hsl(222.2 84% 4.9%);
    --foreground: hsl(210 40% 98%);
    --card: hsl(222.2 84% 4.9%);
    --card-foreground: hsl(210 40% 98%);
    --popover: hsl(222.2 84% 4.9%);
    --popover-foreground: hsl(210 40% 98%);
    --primary: hsl(210 40% 98%);
    --primary-foreground: hsl(222.2 47.4% 11.2%);
    --secondary: hsl(217.2 32.6% 17.5%);
    --secondary-foreground: hsl(210 40% 98%);
    --muted: hsl(217.2 32.6% 17.5%);
    --muted-foreground: hsl(215 20.2% 65.1%);
    --accent: hsl(217.2 32.6% 17.5%);
    --accent-foreground: hsl(210 40% 98%);
    --destructive: hsl(0 62.8% 30.6%);
    --destructive-foreground: hsl(210 40% 98%);
    --border: hsl(217.2 32.6% 17.5%);
    --input: hsl(217.2 32.6% 17.5%);
    --ring: hsl(212.7 26.8% 83.9%);
  }
}

/* Ensure proper color mapping for Tailwind v4 */
@layer utilities {
  .bg-primary {
    background-color: var(--primary);
  }
  
  .text-primary-foreground {
    color: var(--primary-foreground);
  }
  
  .bg-secondary {
    background-color: var(--secondary);
  }
  
  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  
  .bg-destructive {
    background-color: var(--destructive);
  }
  
  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }
  
  .bg-background {
    background-color: var(--background);
  }
  
  .text-foreground {
    color: var(--foreground);
  }
}

/* Fix for shadcn/ui Button destructive variant */
@layer components {
  button[data-variant="destructive"],
  .destructive {
    background-color: hsl(var(--destructive)) !important;
    color: hsl(var(--destructive-foreground)) !important;
  }
  
  button[data-variant="destructive"]:hover,
  .destructive:hover {
    background-color: hsl(var(--destructive) / 0.9) !important;
  }
}

/* Add this to your index.css - Comprehensive Switch fix */

/* Switch component styling */
[data-radix-switch-root] {
    background-color: hsl(var(--input)) !important;
    border: 2px solid hsl(var(--border)) !important;
  }
  
  [data-radix-switch-root][data-state="checked"] {
    background-color: hsl(var(--primary)) !important;
    border-color: hsl(var(--primary)) !important;
  }
  
  [data-radix-switch-root][data-state="unchecked"] {
    background-color: hsl(var(--input)) !important;
    border-color: hsl(var(--border)) !important;
  }
  
  [data-radix-switch-thumb] {
    background-color: hsl(var(--background)) !important;
    border: 1px solid hsl(var(--border)) !important;
  }
  
  /* Alternative selector patterns for switch */
  .switch-root {
    background-color: hsl(var(--input)) !important;
    border: 2px solid hsl(var(--border)) !important;
  }
  
  .switch-root[data-state="checked"] {
    background-color: hsl(var(--primary)) !important;
    border-color: hsl(var(--primary)) !important;
  }
  
  .switch-thumb {
    background-color: hsl(var(--background)) !important;
    border: 1px solid hsl(var(--border)) !important;
  }
  
  /* Force styling for any switch-like elements */
  button[role="switch"],
  [role="switch"] {
    background-color: hsl(214.3 31.8% 91.4%) !important; /* Light gray for unchecked */
    border: 2px solid hsl(214.3 31.8% 91.4%) !important;
    position: relative;
    width: 44px;
    height: 24px;
    border-radius: 12px;
    transition: all 0.2s;
  }
  
  button[role="switch"][data-state="checked"],
  [role="switch"][data-state="checked"] {
    background-color: hsl(142 76% 36%) !important; /* Green for checked */
    border-color: hsl(142 76% 36%) !important;
  }
  
  button[role="switch"] > span,
  [role="switch"] > span {
    background-color: white !important;
    border: 1px solid hsl(214.3 31.8% 91.4%) !important;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    position: absolute;
    top: 2px;
    left: 2px;
    transition: transform 0.2s;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }
  
  button[role="switch"][data-state="checked"] > span,
  [role="switch"][data-state="checked"] > span {
    transform: translateX(22px);
  }
  
  /* Dark mode switches */
  .dark button[role="switch"],
  .dark [role="switch"] {
    background-color: hsl(217.2 32.6% 17.5%) !important;
    border-color: hsl(217.2 32.6% 17.5%) !important;
  }
  
  .dark button[role="switch"][data-state="checked"],
  .dark [role="switch"][data-state="checked"] {
    background-color: hsl(142 76% 36%) !important; /* Green for dark mode too */
    border-color: hsl(142 76% 36%) !important;
  }
  
  .dark button[role="switch"] > span,
  .dark [role="switch"] > span {
    background-color: hsl(222.2 84% 4.9%) !important;
    border-color: hsl(217.2 32.6% 17.5%) !important;
  }
